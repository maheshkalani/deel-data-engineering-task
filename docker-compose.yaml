version: '3.8'

services:
  transactions-db:
    build:
      context: ./docker/postgres-db
    environment:
      - POSTGRES_USER=finance_db_user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=finance_db
    volumes:
      - "${PWD}/db-data:/var/lib/postgresql/data"
      - "${PWD}/db-scripts/initialize_db_ddl.sql:/docker-entrypoint-initdb.d/initialize_db_ddl.sql"
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "wal_level=logical", "-c", "hot_standby=on"]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-connect:
    image: debezium/connect:latest
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
    depends_on:
      - kafka
      - transactions-db
    volumes:
      - ./connector_config.json:/tmp/connector_config.json
    command: >
      /bin/bash -c "
        until curl -s http://localhost:8083/; do 
          echo 'Waiting for Kafka Connect to be ready...'; 
          sleep 5; 
        done;
        curl -X POST -H 'Content-Type: application/json' -d @/tmp/connector_config.json http://localhost:8083/connectors"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/connectors"]
      interval: 30s
      retries: 5
