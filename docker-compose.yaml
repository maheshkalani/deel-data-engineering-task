  version: '2'
  services:
    transactions-db:
      build:
        context: ./docker/postgres-db
      environment:
        - POSTGRES_USER=finance_db_user
        - POSTGRES_PASSWORD=1234
        - POSTGRES_DB=finance_db
      volumes:
        - "db-data:/var/lib/postgresql/data"
        - "./db-scripts/initialize_db_ddl.sql:/docker-entrypoint-initdb.d/initialize_db_ddl.sql"
      ports:
        - "5432:5432"
      command: ["postgres", "-c", "wal_level=logical", "-c", "hot_standby=on"]

    zookeeper:
      image: confluentinc/cp-zookeeper:7.4.0
      ports:
      - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181

    kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_SOCKET_REQUEST_MAX_BYTES: 2147483647
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

    kafka-connect:
      image: debezium/connect:2.6
      ports:
        - "8083:8083"
      environment:
        BOOTSTRAP_SERVERS: kafka:9092
        GROUP_ID: "1"
        CONFIG_STORAGE_TOPIC: "connect-configs"
        OFFSET_STORAGE_TOPIC: "connect-offsets"
        STATUS_STORAGE_TOPIC: "connect-status"
      depends_on:
        - kafka
        - transactions-db
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8083/connectors"]
        interval: 30s
        retries: 5
    connector-creator:
      image: alpine
      depends_on:
        - kafka-connect
      volumes:
        - ./config:/config
      command: >
        /bin/sh -c "apk add --no-cache curl && \
        echo 'Waiting for Kafka Connect to be ready...' && \
        until curl -s http://kafka-connect:8083; do \
          echo 'Waiting for Kafka Connect...'; \
          sleep 5; \
        done; \
        echo 'Kafka Connect is ready! Creating connector...'; \
        curl -X POST -H 'Content-Type: application/json' -d @/config/connector_config.json http://kafka-connect:8083/connectors
        "
      restart: "no"
      environment:
        - KAFKA_CONNECT_HOST=kafka-connect:8083
    jobmanager:
      build:
        context: .
        dockerfile: docker/flink-job/Dockerfile
      ports:
        - "8081:8081"
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          state.backend: filesystem
          state.checkpoints.dir: file:///tmp/flink-checkpoints

    taskmanager:
      build:
        context: .
        dockerfile: docker/flink-job/Dockerfile
      depends_on:
        - jobmanager
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          taskmanager.numberOfTaskSlots: 2
          state.backend: filesystem
          state.checkpoints.dir: file:///tmp/flink-checkpoints

    cli-tool:
      build:
        context: .
        dockerfile: docker/cli-tool/Dockerfile
      depends_on:
        - transactions-db
      volumes:
        - ./output:/app/output
  volumes:
    db-data: